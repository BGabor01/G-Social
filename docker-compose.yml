version: '3.8'

services:
  django:
    build:
      context: .
    command: ./bash_scripts/django_entrypoint.sh
    volumes:
      - static_volume:/usr/src/app/static/
      - media_volume:/usr/src/app/media/
    ports:
      - "8000:8000"
    environment:
      - ENVIRONMENT=prod
      - RABBITMQ_HOST=rabbitmq
      - RABBITMQ_USER=user
      - DATABASE_HOST=mysql
      - DATABASE_PORT=3306
      - DATABASE_USER=root
      - CELERY_BROKER_URL=redis://redis:6379/0
    env_file:
      - ./backend/.env
    depends_on:
      - rabbitmq
      - mysql

  rabbitmq:
    image: rabbitmq:3-management
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq
    environment:
      - RABBITMQ_DEFAULT_USER=user
    env_file:
      - ./backend/.env
    healthcheck:
      test: ["CMD", "rabbitmqctl", "status"]
      interval: 30s
      timeout: 10s
      retries: 3

  mysql:
    image: mysql:latest
    volumes:
      - mysql_data:/var/lib/mysql
    environment:
      - MYSQL_DATABASE=g_social
    env_file:
      - ./backend/.env
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      interval: 30s
      timeout: 10s
      retries: 3

  redis:
    image: redis:alpine
    restart: always
    command: redis-server
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

  nginx:
    image: nginx:latest
    restart: always
    ports:
      - "80:80"
    volumes:
      - static_volume:/usr/share/nginx/html/static/
      - media_volume:/usr/share/nginx/html/media/
      - ./backend/nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - django

  celery:
    restart: unless-stopped
    build:
      context: .
    command: ./bash_scripts/celery_entrypoint.sh
    environment:
      - ENVIRONMENT=prod
      - RABBITMQ_HOST=rabbitmq
      - RABBITMQ_USER=user
      - DATABASE_HOST=mysql
      - DATABASE_PORT=3306
      - DATABASE_USER=root
      - CELERY_BROKER_URL=redis://redis:6379/0
    env_file:
      - ./backend/.env
    depends_on:
      - django
      - redis
      - rabbitmq
    healthcheck:
      test: ["CMD-SHELL", "celery -A g_social inspect ping"]
      interval: 30s
      timeout: 10s
      retries: 3

volumes:
  mysql_data:
  rabbitmq_data:
  static_volume:
  media_volume:
  redis_data:
    
